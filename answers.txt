A. 
    ➜  docs git:(master) ✗ cd ..
    ➜  assignment2 git:(master) ls
    Bicycle.cpp        Car.h              README.md          docs
    Bicycle.h          PoweredVehicle.cpp Vehicle.cpp        main.cpp
    Car.cpp            PoweredVehicle.h   Vehicle.h
    ➜  assignment2 git:(master) git status
    On branch master
    Your branch is up to date with 'origin/master'.

    nothing to commit, working tree clean
    ➜  assignment2 git:(master)

B.
    9 totals commits. The command used was git rev-list HEAD --count

C.
    Wed Sep 25 18:13:30 2019 -0400. The command was: git log -1 --format="%ad" -- .gitignore

D. 
    Branches are used in git to seperate new changes from the master so that unpredicatble code isnt added to the master branch which should be the most stable version of the project. Git uses branches as pointers to a snapshot of the changes made to the repo. 

E.
    git status - displays the state of the working directory and the staging area. Lets you see which changes have been stages, the that haven't, and which files arent being tracked by git.
    git log- displays the committed snapshots. Lets you list the project history, filter it, and search for specific changes.

F.
    git log --follow -- Vehilce.h

G.
    git log --grep=<file> 

H.
    1. Inheritance is when one class acquires the properites of another class. For instance class C inherits from class A and B. 
    2. Same as above just the derived class inherits from multiple different classes and new properties or methods are added to the derived class.
    3. Encapsulation is used to hide certain data from being seen and accessed by others or other classes. An example of this whould be setting a variable to private.

I. 
    1.D&L workflows make it so only one person can push the changes. Everything goes to the dictator and then they merge the repo. The other developers send their changes to the lieutenant and then from them to the dictator. The Intergration Manager workflow is different because any developer can push changes and pull from the blessed repo.

    2. D&L would work better with teams that have a bigger size because it would greatly decrease the chances of someone breaking the code since the code has to reach a admin before it can be pushed to the master branch. The centralized would have all 100 developers making 100 different changes on the sole repo.


5.
    The prototype is using both polymorphism and encapsulation by having mutiple classes derived from two parent classes as well as hiding data member data that certain classes dont need to see or access.
    

